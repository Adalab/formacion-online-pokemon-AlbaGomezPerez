{"version":3,"sources":["CharacterList.js","Filter.js","App.js","GetCharacters.js","index.js"],"names":["CharacterList","props","AllCharacters","SearchName","className","filter","myCartoon","name","toUpperCase","includes","map","item","index","key","src","sprites","front_default","alt","id","types","typeInfo","type","Filters","getNameInput","placeholder","onChange","value","App","state","bind","this","getCartoons","fetch","then","response","json","data","pokemonDetailUrl","results","url","pokemonData","setState","event","currentTarget","Filter","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8TAsCeA,G,MAjCO,SAAAC,GAAU,IACrBC,EAA6BD,EAA7BC,cAAeC,EAAcF,EAAdE,WACtB,OACI,wBAAIC,UAAU,eACTF,EACIG,QAAO,SAAAC,GAAS,OAAIA,EAAUC,KAAKC,cAAcC,SAASN,EAAWK,kBACrEE,KAAI,SAACC,EAAMC,GACR,OACI,wBAAIR,UAAU,UAAUS,IAAKD,GACrB,yBAAKR,UAAU,eAAeU,IAAKH,EAAKI,QAAQC,cAAeC,IAAKN,EAAKJ,OAC7E,yBAAKH,UAAU,aAAaO,EAAKO,IACjC,yBAAKd,UAAU,iBACX,yBAAKA,UAAU,eAAf,IAA+BO,EAAKJ,MACpC,yBAAKH,UAAU,gBACVO,EAAKQ,MAAMT,KAAI,SAACU,EAAUR,GACvB,OACI,0BAAMR,UAAU,cAAcS,IAAKD,GAAQQ,EAASC,KAAKd,kBCHtFe,EAdC,SAAArB,GAAU,IACfE,EAA4BF,EAA5BE,WAAYoB,EAAgBtB,EAAhBsB,aACnB,OACI,yBAAKnB,UAAU,gBACX,2BAAOiB,KAAK,OAAOjB,UAAU,YAAYoB,YAAY,mBAAmBC,SAAUF,EAAcG,MAAOvB,MC6FpGwB,E,YA9FX,WAAY1B,GAAQ,IAAD,8BACf,4CAAMA,KAED2B,MAAQ,CACT1B,cAAe,GACfC,WAAY,IAGhB,EAAKoB,aAAe,EAAKA,aAAaM,KAAlB,gBARL,E,iFAefC,KAAKC,gB,oCAKM,IAAD,OCvBPC,MAHC,kEAIHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDwBtBF,MAAK,SAAAG,GAAS,ICnBGC,EDmBJ,uBACV,YAAiBD,EAAKE,QAAtB,+CAA+B,CAAC,IAAvB3B,EAAsB,SCpBjB0B,EDqBW1B,EAAK4B,ICpBnCP,MAAMK,GACRJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDmBgBF,MAAK,SAAAO,GAChC,EAAKC,SAAS,CACVvC,cAAc,GAAD,mBAAM,EAAK0B,MAAM1B,eAAjB,CAAgCsC,UAJ/C,wF,mCAuCLE,GACT,IAAMvC,EAAauC,EAAMC,cAAcjB,MACvCI,KAAKW,SAAS,CACVtC,WAAYA,M,+BAQnB,IAAD,EACwC2B,KAAKF,MAAlC1B,EADX,EACWA,cAAeC,EAD1B,EAC0BA,WACtB,OACI,yBAAKC,UAAU,OACX,gCACI,wBAAIA,UAAU,iBAAd,0BAEJ,8BACI,kBAACwC,EAAD,CACIzC,WAAYA,EACZoB,aAAcO,KAAKP,eAEvB,kBAAC,EAAD,CACIrB,cAAeA,EACfC,WAAYA,U,GAvFtB0C,IAAMC,WEFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3c86aa1c.chunk.js","sourcesContent":["/*FILTER Y MAP*/\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst CharacterList = props => {\n    const {AllCharacters, SearchName} = props;\n    return (\n        <ul className=\"pokemonList\" >\n            {AllCharacters\n                .filter(myCartoon => myCartoon.name.toUpperCase().includes(SearchName.toUpperCase()))\n                .map((item, index) => {\n                    return (\n                        <li className=\"pokemon\" key={index}>\n                                <img className=\"pokemonImage\" src={item.sprites.front_default} alt={item.name}/>\n                            <div className=\"pokemonId\">{item.id}</div>\n                            <div className=\"infoContainer\">\n                                <div className=\"pokemonName\"> {item.name}</div>\n                                <div className=\"pokemonTypes\">\n                                    {item.types.map((typeInfo, index) => {\n                                        return (\n                                            <span className=\"pokemonType\" key={index}>{typeInfo.type.name}</span>\n                                        )\n                                    })}\n                            </div>\n                            </div>\n                        </li>\n                    );\n                })\n            }\n        </ul>\n    );\n};\n\nCharacterList.propTypes ={\n    AllCharacters: PropTypes.array\n};\n\nexport default CharacterList;","/*ESTRUCTURA HTML INPUT*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n    const {SearchName, getNameInput} = props;\n    return (\n        <div className=\"app__filters\">\n            <input type=\"text\" className=\"nameInput\" placeholder=\"Character's name\" onChange={getNameInput} value={SearchName}/>\n        </div>\n    );\n};\n\nFilters.propTypes = {\n    SearchName: PropTypes.string,\n    getNameInput: PropTypes.func\n};\n\nexport default Filters;\n","import React from 'react';\nimport './App.css';\nimport {GetCharacters, GetCharactersDetails} from './GetCharacters';\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filter\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            AllCharacters: [],\n            SearchName: ''\n        };\n\n        this.getNameInput = this.getNameInput.bind(this);\n\n    }\n\n\n// Función sirve para pintar la petición al entrar en la página\n    componentDidMount() {\n        this.getCartoons();\n    }\n\n// Función que contiene la segunda parte del fetch, donde se actualiza\n// el estado (array). Es llamada en componentDidMount\n    getCartoons() {\n        GetCharacters()\n            .then(data => {\n                for (let item of data.results) {\n                    GetCharactersDetails(item.url).then(pokemonData => {\n                        this.setState({\n                            AllCharacters: [...this.state.AllCharacters, pokemonData]\n                        })\n                    })\n\n                }\n    //             for (let item of data.results) {\n    //                 this.setState({\n    //                     AllCharacters: [...this.state.AllCharacters, {\n    //                         name: item.name,\n    //                         id: 1,\n    //                         sprites: {\n    //                             front_default: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\"\n    //                         },\n    //                         types: [\n    //                             {\n    //                                 slot: 2,\n    //                                 type: {\n    //                                     url: \"http://pokeapi.salestock.net/api/v2/type/4/\",\n    //                                     name: \"poison\"\n    //                                 }\n    //                             },\n    //                             {\n    //                                 slot: 1,\n    //                                 type: {\n    //                                     url: \"http://pokeapi.salestock.net/api/v2/type/12/\",\n    //                                     name: \"grass\"\n    //                                 }\n    //                             }\n    //                         ]\n    //                     }]\n    //                 })\n    //             }\n            });\n    }\n\n        getNameInput(event){\n            const SearchName = event.currentTarget.value;\n            this.setState({\n                SearchName: SearchName\n            });\n\n        }\n\n        // Se ejecuta 5 veces, con valores desde paso desde 0 hasta 4.\n\n        render()\n        {\n            const {AllCharacters, SearchName} = this.state;\n            return (\n                <div className=\"App\">\n                    <header>\n                        <h1 className=\"pokemon-title\">My favorite's Pokemon</h1>\n                    </header>\n                    <main>\n                        <Filters\n                            SearchName={SearchName}\n                            getNameInput={this.getNameInput}\n                        />\n                        <CharacterList\n                            AllCharacters={AllCharacters}\n                            SearchName={SearchName}\n                            />\n                    </main>\n                </div>\n            );\n        }\n        ;\n    }\nexport default App;\n\n","/*PETICIÓN INICIAL*/\nconst url = \"http://pokeapi.salestock.net/api/v2/pokemon/?limit=25&offset=0\";\n\nconst GetCharacters = () => {\n    return fetch(url)\n        .then(response => response.json());\n};\n\n\n/*SEGUNDA PETICIÓN. Detalles pokemons*/\nconst GetCharactersDetails = (pokemonDetailUrl) => {\n    return fetch(pokemonDetailUrl)\n        .then(response => response.json());\n};\n\n\n\nexport {GetCharacters};\nexport {GetCharactersDetails};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}